#server:
#  port: 8080
#
#
#spring:
#  application:
#    name: gateway
#  main:
#    web-application-type: reactive
#
#  # Security: Resource server (Keycloak)
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: http://localhost:8081/realms/teamnest-demo
#
#  # Redis (rate limiter backend)
#  data:
#    redis:
#      host: localhost
#      port: 6379
#
#  cloud:
#    gateway:
#      httpclient:
#        connect-timeout: 3000         # ms
#        response-timeout: 5s          # ISO-8601 trajanje
#      default-filters:
#        - DedupeResponseHeader=Access-Control-Allow-Credentials, RETAIN_FIRST
#        - DedupeResponseHeader=Access-Control-Allow-Origin, RETAIN_FIRST
#        - DedupeResponseHeader=Access-Control-Expose-Headers, RETAIN_FIRS
#
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "health,info,prometheus,metrics,env,threaddump,httpexchanges"
#  endpoint:
#    health:
#      probes:
#        enabled: true
#  observations:
#    key-values:
#      application: gateway
#
## Resilience4j basics
#resilience4j:
#  circuitbreaker:
#    instances:
#      userServiceCB:
#        slidingWindowType: COUNT_BASED
#        slidingWindowSize: 20
#        failureRateThreshold: 50
#        waitDurationInOpenState: 5s
#      trainingServiceCB:
#        slidingWindowType: COUNT_BASED
#        slidingWindowSize: 20
#        failureRateThreshold: 50
#        waitDurationInOpenState: 5s

server:
  port: 8080
  compression:
    enabled: true

spring:
  application:
    name: gateway
  main:
    web-application-type: reactive
  webflux:
    problemdetails:
      enabled: true

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/realms/teamnest-demo

  data:
    redis:
      host: localhost
      port: 6379

  codec:
    max-in-memory-size: 10MB

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,env,threaddump,httpexchanges
  endpoint:
    health:
      probes:
        enabled: true
  observations:
    key-values:
      application: gateway
  tracing:
    sampling:
      probability: 1.0   # po potrebi spusti na 0.1 u produkciji

resilience4j:
  circuitbreaker:
    instances:
      userServiceCB:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
      trainingServiceCB:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
